{"ast":null,"code":"import _classCallCheck from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\src\\\\commons\\\\chat\\\\admin-chat-window.js\";\nimport React from 'react';\nimport ChatHeader from './chat-header';\nimport MessageList from './message-list';\nimport ChatInput from './chat-input';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport UserChatWindow from \"./user-chat-window\";\nimport UserList from \"./user-list\";\nimport * as API_USERS from \"../../person/api/admin-api\";\n\nvar AdminChatWindow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminChatWindow, _React$Component);\n\n  function AdminChatWindow(props) {\n    var _this;\n\n    _classCallCheck(this, AdminChatWindow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminChatWindow).call(this, props));\n\n    _this.onSelectUser = function (user) {\n      _this.setState({\n        selectedUser: user\n      });\n    };\n\n    _this.state = {\n      stompClient: null,\n      messages: [],\n      selectedUser: null,\n      users: null,\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(AdminChatWindow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPersons();\n    }\n  }, {\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this2 = this;\n\n      return API_USERS.getUsers(function (result, status, err) {\n        if (result !== null && status === 200) {\n          console.log(result);\n          var users = result.map(function (user) {\n            return {\n              id: user.id,\n              username: user.username\n            };\n          });\n\n          _this2.setState({\n            users: users,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedUser = this.state.selectedUser;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(UserList, {\n        users: this.state.users,\n        onSelectUser: this.onSelectUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), selectedUser && React.createElement(UserChatWindow, {\n        receiver: selectedUser.username,\n        sender: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AdminChatWindow;\n}(React.Component);\n\nexport default AdminChatWindow;","map":{"version":3,"sources":["D:\\Stuff\\My Shit\\facultate\\an4\\SD\\Gitlab Docker Project Default\\react-frontend\\src\\commons\\chat\\admin-chat-window.js"],"names":["React","ChatHeader","MessageList","ChatInput","SockJS","Stomp","UserChatWindow","UserList","API_USERS","AdminChatWindow","props","onSelectUser","user","setState","selectedUser","state","stompClient","messages","users","isLoaded","fetchPersons","getUsers","result","status","err","console","log","map","id","username","errorStatus","error","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UAsCnBC,YAtCmB,GAsCJ,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF;AAAhB,OAAd;AACH,KAxCkB;;AAEf,UAAKG,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTH,MAAAA,YAAY,EAAE,IAHL;AAITI,MAAAA,KAAK,EAAE,IAJE;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAFe;AASlB;;;;wCAEmB;AAChB,WAAKC,YAAL;AACH;;;mCAEc;AAAA;;AACX,aAAOZ,SAAS,CAACa,QAAV,CAAmB,UAACC,MAAD,EAASC,MAAT,EAAiBC,GAAjB,EAAyB;AAC/C,YAAIF,MAAM,KAAK,IAAX,IAAmBC,MAAM,KAAK,GAAlC,EAAuC;AACnCE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,cAAMJ,KAAK,GAAGI,MAAM,CAACK,GAAP,CAAW,UAAAf,IAAI;AAAA,mBAAK;AAC9BgB,cAAAA,EAAE,EAAEhB,IAAI,CAACgB,EADqB;AAE9BC,cAAAA,QAAQ,EAAEjB,IAAI,CAACiB;AAFe,aAAL;AAAA,WAAf,CAAd;;AAKA,UAAA,MAAI,CAAChB,QAAL,CAAc;AACVK,YAAAA,KAAK,EAAEA,KADG;AAEVC,YAAAA,QAAQ,EAAE;AAFA,WAAd;AAIH,SAZD,MAYO;AACH,UAAA,MAAI,CAACN,QAAL,CAAc;AACViB,YAAAA,WAAW,EAAEP,MADH;AAEVQ,YAAAA,KAAK,EAAEP;AAFG,WAAd;AAIH;AACJ,OAnBM,CAAP;AAoBH;;;6BAMQ;AAAA,UACGV,YADH,GACoB,KAAKC,KADzB,CACGD,YADH;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWI,QAAX,IAAuB,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KAA5B;AAAmC,QAAA,YAAY,EAAE,KAAKP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD5B,EAEKG,YAAY,IAAI,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA,YAAY,CAACe,QAAvC;AAAiD,QAAA,MAAM,EAAE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFrB,CADJ;AAMH;;;;EApDyB7B,KAAK,CAACgC,S;;AAuDpC,eAAevB,eAAf","sourcesContent":["import React from 'react';\r\nimport ChatHeader from './chat-header';\r\nimport MessageList from './message-list';\r\nimport ChatInput from './chat-input';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport UserChatWindow from \"./user-chat-window\";\r\nimport UserList from \"./user-list\";\r\nimport * as API_USERS from \"../../person/api/admin-api\";\r\n\r\nclass AdminChatWindow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stompClient: null,\r\n            messages: [],\r\n            selectedUser: null,\r\n            users: null,\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPersons();\r\n    }\r\n\r\n    fetchPersons() {\r\n        return API_USERS.getUsers((result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                console.log(result);\r\n\r\n                const users = result.map(user => ({\r\n                    id: user.id,\r\n                    username: user.username\r\n                }));\r\n\r\n                this.setState({\r\n                    users: users,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorStatus: status,\r\n                    error: err\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onSelectUser = (user) => {\r\n        this.setState({ selectedUser: user });\r\n    };\r\n\r\n    render() {\r\n        const { selectedUser } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {this.state.isLoaded && <UserList users={this.state.users} onSelectUser={this.onSelectUser}/>}\r\n                {selectedUser && <UserChatWindow receiver={selectedUser.username} sender={\"admin\"}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminChatWindow;\r\n"]},"metadata":{},"sourceType":"module"}
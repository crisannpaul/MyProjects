{"ast":null,"code":"import { HOST } from \"../../commons/api/hosts\";\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  em: '/api/energy-meter'\n};\n\nfunction getEnergyMeters(callback) {\n  var request = new Request(HOST.em_backend_api + endpoint.em, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction insertEnergyMeter(energyMeter, callback) {\n  var request = new Request(HOST.em_backend_api + endpoint.em, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(energyMeter)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction updateEnergyMeter(energyMeter, callback) {\n  var request = new Request(HOST.em_backend_api + endpoint.em + '/' + energyMeter.id, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(energyMeter)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteEnergyMeter(id, callback) {\n  var request = new Request(HOST.em_backend_api + endpoint.em + '/' + id, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(id)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nexport { getEnergyMeters, insertEnergyMeter, updateEnergyMeter, deleteEnergyMeter };","map":{"version":3,"sources":["D:\\Stuff\\My Shit\\facultate\\an4\\SD\\Gitlab Docker Project Default\\react-frontend\\src\\person\\api\\em-api.js"],"names":["HOST","RestApiClient","endpoint","em","getEnergyMeters","callback","request","Request","em_backend_api","method","console","log","url","performRequest","insertEnergyMeter","energyMeter","headers","body","JSON","stringify","updateEnergyMeter","id","deleteEnergyMeter"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,EAAE,EAAE;AADS,CAAjB;;AAIA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AAC/B,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,cAAL,GAAsBN,QAAQ,CAACC,EAA3C,EAA+C;AACzDM,IAAAA,MAAM,EAAE;AADiD,GAA/C,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASS,iBAAT,CAA2BC,WAA3B,EAAwCV,QAAxC,EAAiD;AAC7C,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,cAAL,GAAsBN,QAAQ,CAACC,EAA3C,EAA+C;AACzDM,IAAAA,MAAM,EAAE,MADiD;AAEzDO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAF+C;AAMzDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf;AANmD,GAA/C,CAAd;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASe,iBAAT,CAA2BL,WAA3B,EAAwCV,QAAxC,EAAiD;AAC7C,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,cAAL,GAAsBN,QAAQ,CAACC,EAA/B,GAAoC,GAApC,GAA0CY,WAAW,CAACM,EAAlE,EAAsE;AAChFZ,IAAAA,MAAM,EAAE,KADwE;AAEhFO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFsE;AAMhFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf;AAN0E,GAAtE,CAAd;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASiB,iBAAT,CAA2BD,EAA3B,EAA+BhB,QAA/B,EAAwC;AACpC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,cAAL,GAAsBN,QAAQ,CAACC,EAA/B,GAAoC,GAApC,GAA0CkB,EAAtD,EAA0D;AACpEZ,IAAAA,MAAM,EAAE,QAD4D;AAEpEO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAF0D;AAMpEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,EAAf;AAN8D,GAA1D,CAAd;AASAX,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SACID,eADJ,EAEIU,iBAFJ,EAGIM,iBAHJ,EAIIE,iBAJJ","sourcesContent":["import {HOST} from \"../../commons/api/hosts\";\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    em: '/api/energy-meter'\r\n};\r\n\r\nfunction getEnergyMeters(callback) {\r\n    let request = new Request(HOST.em_backend_api + endpoint.em, {\r\n        method: 'GET',\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction insertEnergyMeter(energyMeter, callback){\r\n    let request = new Request(HOST.em_backend_api + endpoint.em, {\r\n        method: 'POST',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(energyMeter)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction updateEnergyMeter(energyMeter, callback){\r\n    let request = new Request(HOST.em_backend_api + endpoint.em + '/' + energyMeter.id, {\r\n        method: 'PUT',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(energyMeter)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction deleteEnergyMeter(id, callback){\r\n    let request = new Request(HOST.em_backend_api + endpoint.em + '/' + id, {\r\n        method: 'DELETE',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(id)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nexport {\r\n    getEnergyMeters,\r\n    insertEnergyMeter,\r\n    updateEnergyMeter,\r\n    deleteEnergyMeter\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
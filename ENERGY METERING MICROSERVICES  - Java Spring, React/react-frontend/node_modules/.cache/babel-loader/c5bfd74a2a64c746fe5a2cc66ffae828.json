{"ast":null,"code":"function performRequest(request, callback) {\n  fetch(request).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        return callback(json, response.status, null);\n      });\n    } else {\n      response.json().then(function (err) {\n        return callback(null, response.status, err);\n      });\n    }\n  }).catch(function (err) {\n    //catch any other unexpected error, and set custom code for error = 1\n    callback(null, 1, err);\n  });\n}\n\nfunction decodeToken(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\n\nmodule.exports = {\n  performRequest: performRequest,\n  decodeToken: decodeToken\n};","map":{"version":3,"sources":["D:\\Stuff\\My Shit\\facultate\\an4\\SD\\Gitlab Docker Project Default\\react-frontend\\src\\commons\\api\\rest-client.js"],"names":["performRequest","request","callback","fetch","then","response","ok","json","status","err","catch","decodeToken","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA0C;AACtCC,EAAAA,KAAK,CAACF,OAAD,CAAL,CACKG,IADL,CAEQ,UAASC,QAAT,EAAmB;AACf,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAG,IAAI;AAAA,eAAIL,QAAQ,CAACK,IAAD,EAAOF,QAAQ,CAACG,MAAhB,EAAwB,IAAxB,CAAZ;AAAA,OAAzB;AACH,KAFD,MAGK;AACDH,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAK,GAAG;AAAA,eAAIP,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACG,MAAhB,EAAwBC,GAAxB,CAAZ;AAAA,OAAxB;AACH;AACJ,GATT,EAUKC,KAVL,CAUW,UAAUD,GAAV,EAAe;AAClB;AACAP,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,EAAUO,GAAV,CAAR;AACH,GAbL;AAcH;;AAED,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAlB;AACA,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAf;AACA,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AAC1E,WAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,GAFsC,EAEpCC,IAFoC,CAE/B,EAF+B,CAAD,CAAtC;AAIA,SAAOC,IAAI,CAACC,KAAL,CAAWV,WAAX,CAAP;AACH;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACb7B,EAAAA,cAAc,EAAdA,cADa;AAEbW,EAAAA,WAAW,EAAXA;AAFa,CAAjB","sourcesContent":["function performRequest(request, callback){\r\n    fetch(request)\r\n        .then(\r\n            function(response) {\r\n                if (response.ok) {\r\n                    response.json().then(json => callback(json, response.status, null));\r\n                }\r\n                else {\r\n                    response.json().then(err => callback(null, response.status, err));\r\n                }\r\n            })\r\n        .catch(function (err) {\r\n            //catch any other unexpected error, and set custom code for error = 1\r\n            callback(null, 1, err)\r\n        });\r\n}\r\n\r\nfunction decodeToken(token) {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\nmodule.exports = {\r\n    performRequest,\r\n    decodeToken\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
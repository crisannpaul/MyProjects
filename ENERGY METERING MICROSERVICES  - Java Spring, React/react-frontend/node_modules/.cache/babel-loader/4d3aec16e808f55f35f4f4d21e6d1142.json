{"ast":null,"code":"import _classCallCheck from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\src\\\\person\\\\admin-page.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport { DropdownItem, DropdownMenu, DropdownToggle, Nav, Navbar, NavbarBrand, NavLink, UncontrolledDropdown } from 'reactstrap';\nimport UpdateUsersForm from \"./components/users-management/update-user-form\";\nimport { Redirect } from 'react-router-dom';\nimport * as API_USERS from \"./api/admin-api\";\nimport PersonTable from \"./components/users-management/users-table\";\nimport AddUsersForm from './components/users-management/add-user-form';\nimport DeleteUserForm from './components/users-management/delete-user-form';\nimport UsersManagementContainer from './components/users-management/users-management-container';\nimport EmManagementContainer from './components/em-management/em-management-container';\nimport AdminChatWindow from \"../commons/chat/admin-chat-window\";\nvar textStyle = {\n  color: 'black',\n  textDecoration: 'none'\n};\nvar localStorage = window.localStorage;\n\nvar AdminPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminPage, _React$Component);\n\n  function AdminPage(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminPage).call(this, props));\n\n    _this.setSelectedEntity = function (entity) {\n      _this.setState({\n        selectedEntity: entity\n      });\n    };\n\n    _this.setSelectedEntity = _this.setSelectedEntity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selectedEntity: 'users',\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null,\n      usersList: []\n    };\n    return _this;\n  }\n\n  _createClass(AdminPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPersons();\n    }\n  }, {\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this2 = this;\n\n      return API_USERS.getUsers(function (result, status, err) {\n        if (result !== null && status === 200) {\n          console.log(result);\n          var usernames = result.map(function (user) {\n            return user.username;\n          });\n\n          _this2.setState({\n            tableData: result,\n            usersList: usernames,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var content;\n\n      if (this.state.selectedEntity === 'users') {\n        content = React.createElement(UsersManagementContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.selectedEntity === 'em') {\n        content = React.createElement(EmManagementContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, localStorage.role !== \"ROLE_ADMIN\" && React.createElement(Redirect, {\n        to: \"/login\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(AdminChatWindow, {\n        users: this.state.usersList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        style: textStyle,\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Table\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this3.setSelectedEntity('users');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Users\"), React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this3.setSelectedEntity('em');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Energy Meters\"), React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this3.setSelectedEntity('users-em');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Users-Meters\")))), content);\n    }\n  }]);\n\n  return AdminPage;\n}(React.Component);\n\nexport default AdminPage;","map":{"version":3,"sources":["D:\\Stuff\\My Shit\\facultate\\an4\\SD\\Gitlab Docker Project Default\\react-frontend\\src\\person\\admin-page.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","DropdownItem","DropdownMenu","DropdownToggle","Nav","Navbar","NavbarBrand","NavLink","UncontrolledDropdown","UpdateUsersForm","Redirect","API_USERS","PersonTable","AddUsersForm","DeleteUserForm","UsersManagementContainer","EmManagementContainer","AdminChatWindow","textStyle","color","textDecoration","localStorage","window","AdminPage","props","setSelectedEntity","entity","setState","selectedEntity","bind","reload","state","collapseForm","tableData","isLoaded","errorStatus","error","usersList","fetchPersons","getUsers","result","status","err","console","log","usernames","map","user","username","content","role","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,qDAApC;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,KALJ,EAMIC,SANJ,EAOIC,WAPJ,EAQIC,GARJ,QASO,YATP;AAUA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,cAHJ,EAIIC,GAJJ,EAKIC,MALJ,EAMIC,WANJ,EAOIC,OAPJ,EAQIC,oBARJ,QASO,YATP;AAUA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,wBAAP,MAAqC,0DAArC;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,OADO;AAEdC,EAAAA,cAAc,EAAE;AAFF,CAAlB;AAKA,IAAMC,YAAY,GAAGC,MAAM,CAACD,YAA5B;;IAEME,S;;;;;AAEF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAwCnBC,iBAxCmB,GAwCC,UAACC,MAAD,EAAY;AAC5B,YAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF;AAAjB,OAAd;AACH,KA1CkB;;AAEf,UAAKD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBI,IAAvB,uDAAzB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,uDAAd;AACA,UAAKE,KAAL,GAAa;AACTH,MAAAA,cAAc,EAAE,OADP;AAETI,MAAAA,YAAY,EAAE,KAFL;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,WAAW,EAAE,CALJ;AAMTC,MAAAA,KAAK,EAAE,IANE;AAOTC,MAAAA,SAAS,EAAE;AAPF,KAAb;AAJe;AAalB;;;;wCAEmB;AAChB,WAAKC,YAAL;AACH;;;mCAEc;AAAA;;AACX,aAAO3B,SAAS,CAAC4B,QAAV,CAAmB,UAACC,MAAD,EAASC,MAAT,EAAiBC,GAAjB,EAAyB;AAC/C,YAAIF,MAAM,KAAK,IAAX,IAAmBC,MAAM,KAAK,GAAlC,EAAuC;AACnCE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,cAAMK,SAAS,GAAGL,MAAM,CAACM,GAAP,CAAW,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,QAAT;AAAA,WAAf,CAAlB;;AAEA,UAAA,MAAI,CAACrB,QAAL,CAAc;AACVM,YAAAA,SAAS,EAAEO,MADD;AAEVH,YAAAA,SAAS,EAAEQ,SAFD;AAGVX,YAAAA,QAAQ,EAAE;AAHA,WAAd;AAKH,SAVD,MAUO;AACH,UAAA,MAAI,CAACP,QAAL,CAAc;AACVQ,YAAAA,WAAW,EAAEM,MADH;AAEVL,YAAAA,KAAK,EAAEM;AAFG,WAAd;AAIH;AACJ,OAjBM,CAAP;AAkBH;;;6BAMQ;AACL,WAAKf,QAAL,CAAc;AACVO,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;;;6BAEQ;AAAA;;AACL,UAAIe,OAAJ;;AACA,UAAG,KAAKlB,KAAL,CAAWH,cAAX,KAA8B,OAAjC,EAA0C;AACtCqB,QAAAA,OAAO,GAAG,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;;AACD,UAAG,KAAKlB,KAAL,CAAWH,cAAX,KAA8B,IAAjC,EAAuC;AACnCqB,QAAAA,OAAO,GAAG,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK5B,YAAY,CAAC6B,IAAb,KAAsB,YAAtB,IAAsC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAsB,QAAA,IAAI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD3C,EAEI,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWM,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,oBAAD;AAAsB,QAAA,GAAG,MAAzB;AAA0B,QAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEnB,SAAvB;AAAkC,QAAA,GAAG,MAArC;AAAsC,QAAA,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACO,iBAAL,CAAuB,OAAvB,CAAN;AAAA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAKI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,iBAAL,CAAuB,IAAvB,CAAN;AAAA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,EAQI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,iBAAL,CAAuB,UAAvB,CAAN;AAAA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,CAJJ,CAFJ,CAJJ,EA4BKwB,OA5BL,CADJ;AAoCH;;;;EAjGmB1D,KAAK,CAAC4D,S;;AAoG9B,eAAe5B,SAAf","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport {\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavLink,\r\n    UncontrolledDropdown\r\n} from 'reactstrap';\r\nimport UpdateUsersForm from \"./components/users-management/update-user-form\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as API_USERS from \"./api/admin-api\"\r\nimport PersonTable from \"./components/users-management/users-table\";\r\nimport AddUsersForm from './components/users-management/add-user-form';\r\nimport DeleteUserForm from './components/users-management/delete-user-form';\r\nimport UsersManagementContainer from './components/users-management/users-management-container';\r\nimport EmManagementContainer from './components/em-management/em-management-container';\r\nimport AdminChatWindow from \"../commons/chat/admin-chat-window\"\r\n\r\nconst textStyle = {\r\n    color: 'black',\r\n    textDecoration: 'none'\r\n};\r\n\r\nconst localStorage = window.localStorage;\r\n\r\nclass AdminPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setSelectedEntity = this.setSelectedEntity.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            selectedEntity: 'users',\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null,\r\n            usersList: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPersons();\r\n    }\r\n\r\n    fetchPersons() {\r\n        return API_USERS.getUsers((result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                console.log(result);\r\n\r\n                const usernames = result.map(user => user.username);\r\n\r\n                this.setState({\r\n                    tableData: result,\r\n                    usersList: usernames,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorStatus: status,\r\n                    error: err\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setSelectedEntity = (entity) => {\r\n        this.setState({selectedEntity: entity});\r\n    }\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if(this.state.selectedEntity === 'users') {\r\n            content = <UsersManagementContainer/>\r\n        }\r\n        if(this.state.selectedEntity === 'em') {\r\n            content = <EmManagementContainer/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {localStorage.role !== \"ROLE_ADMIN\" && <Redirect to=\"/login\" push/>}\r\n                <AdminChatWindow users={this.state.usersList}/>\r\n                \r\n                <CardHeader>\r\n                        \r\n                    <UncontrolledDropdown nav inNavbar>\r\n                        <DropdownToggle style={textStyle} nav caret>\r\n                        Table\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right >\r\n\r\n                            <DropdownItem onClick={() => this.setSelectedEntity('users')}>\r\n                                Users\r\n                            </DropdownItem>\r\n                            <DropdownItem onClick={() => this.setSelectedEntity('em')}>\r\n                                Energy Meters\r\n                            </DropdownItem>\r\n                            <DropdownItem onClick={() => this.setSelectedEntity('users-em')}>\r\n                                Users-Meters\r\n                            </DropdownItem>\r\n\r\n\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n\r\n                </CardHeader>\r\n                \r\n                {content}\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AdminPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Stuff\\\\My Shit\\\\facultate\\\\an4\\\\SD\\\\Gitlab Docker Project Default\\\\react-frontend\\\\src\\\\user\\\\user-page.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport * as API_EM from \"./api/em-api\";\nimport EnergyMeterTable from './components/em-table';\nimport { Redirect } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nvar localStorage = window.localStorage;\n\nvar UserPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPage, _React$Component);\n\n  function UserPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPage).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        showModal: !_this.state.showModal\n      });\n    };\n\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      addFormSelected: false,\n      updateFormSelected: false,\n      deleteFormSelected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null,\n      notification: '',\n      showModal: false\n    };\n    _this.stompClient = null;\n    return _this;\n  }\n\n  _createClass(UserPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPersons();\n      this.connectWebSocket();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n      }\n    }\n  }, {\n    key: \"connectWebSocket\",\n    value: function connectWebSocket() {\n      var _this2 = this;\n\n      var socket = new SockJS('http://localhost:8082/ws');\n      this.stompClient = Stomp.over(socket);\n      var currentUserId = localStorage.getItem('id');\n      this.stompClient.connect({}, function (frame) {\n        _this2.stompClient.subscribe('/topic/user.' + currentUserId, function (notification) {\n          var message = JSON.parse(notification.body);\n          console.log(message);\n\n          _this2.setState({\n            notification: message,\n            showModal: true\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this3 = this;\n\n      var userId = localStorage.id;\n      return API_EM.getEnergyMetersByUserId(userId, function (result, status, err) {\n        if (result !== null && status === 200) {\n          console.log(result);\n\n          _this3.setState({\n            tableData: result,\n            isLoaded: true\n          });\n        } else {\n          _this3.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.fetchPersons();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, localStorage.role !== \"ROLE_CLIENT\" && React.createElement(Redirect, {\n        to: \"/login\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Notification\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.notification)), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" Energy Meters \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(EnergyMeterTable, {\n        tableData: this.state.tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UserPage;\n}(React.Component);\n\nexport default UserPage;","map":{"version":3,"sources":["D:\\Stuff\\My Shit\\facultate\\an4\\SD\\Gitlab Docker Project Default\\react-frontend\\src\\user\\user-page.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","API_EM","EnergyMeterTable","Redirect","SockJS","Stomp","localStorage","window","UserPage","props","toggleModal","setState","showModal","state","reload","bind","addFormSelected","updateFormSelected","deleteFormSelected","collapseForm","tableData","isLoaded","errorStatus","error","notification","stompClient","fetchPersons","connectWebSocket","disconnect","socket","over","currentUserId","getItem","connect","frame","subscribe","message","JSON","parse","body","console","log","userId","id","getEnergyMetersByUserId","result","status","err","role","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\n\r\nimport * as API_EM from \"./api/em-api\"\r\nimport EnergyMeterTable from './components/em-table';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nconst localStorage = window.localStorage;\r\n\r\nclass UserPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            addFormSelected: false,\r\n            updateFormSelected: false,\r\n            deleteFormSelected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null,\r\n            notification: '',\r\n            showModal: false\r\n        };\r\n        this.stompClient = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPersons();\r\n        this.connectWebSocket();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.stompClient) {\r\n            this.stompClient.disconnect();\r\n        }\r\n    }\r\n\r\n    connectWebSocket() {\r\n        const socket = new SockJS('http://localhost:8082/ws');\r\n        this.stompClient = Stomp.over(socket);\r\n        const currentUserId = localStorage.getItem('id');\r\n\r\n        this.stompClient.connect({}, frame => {\r\n            this.stompClient.subscribe('/topic/user.' + currentUserId, notification => {\r\n                const message = JSON.parse(notification.body);\r\n                console.log(message)\r\n                this.setState({\r\n                    notification: message,\r\n                    showModal: true\r\n                });\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    fetchPersons() {\r\n        const userId = localStorage.id;\r\n\r\n        return API_EM.getEnergyMetersByUserId(userId, (result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                console.log(result)\r\n                this.setState({\r\n                    tableData: result,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: err\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n        this.fetchPersons();\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ showModal: !this.state.showModal });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {localStorage.role !== \"ROLE_CLIENT\" && <Redirect to=\"/login\" push/>}\r\n\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Notification</ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.notification}\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <CardHeader>\r\n                    <strong> Energy Meters </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoaded && <EnergyMeterTable  tableData = {this.state.tableData}/>}\r\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatus}\r\n                                                            error={this.state.error}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
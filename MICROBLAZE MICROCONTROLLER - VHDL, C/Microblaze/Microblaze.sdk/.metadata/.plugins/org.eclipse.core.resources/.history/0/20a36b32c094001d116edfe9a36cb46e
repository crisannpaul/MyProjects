#include "PmodTMP3.h"
#include "PmodDPG1.h"
#include "stdio.h"
#include "xil_printf.h"
#include "xil_types.h"
#include "xil_cache.h"
#include "xparameters.h"
#include "xgpio.h"
#include "sleep.h"
#include "gpio/sseg.h"
#include "gpio/sseg_loop.h"

XGpio gpio;
PmodTMP3 TemperatureSensor;
PmodDPG1 PressureSensor;

#define IIC_ADDR 0x00020000
#define SPI_ADDR 0x00030000
#define GPIO_ADDR 0x40000000
#define GPIO_DEVICE_ID XPAR_GPIO_0_DEVICE_ID
#define GPIO_DEVICE_CAT XPAR_GPIO_1_DEVICE_ID
#define DELAY 99999999


int main(void) {
	Xil_ICacheEnable();
	Xil_DCacheEnable();

	// initialize 7 segment display
	int Status = XGpio_Initialize(&gpio, GPIO_DEVICE_ID);
	if (Status != XST_SUCCESS) {
		xil_printf("Gpio Initialization Failed\r\n");
		return XST_FAILURE;
	}
	xil_printf("Gpio Initialization Success\r\n");
	XGpio_SetDataDirection(&gpio, 1, 0x0); // set all 7-segment tristates to output
	XGpio_DiscreteWrite(&gpio, 1, 0xE); // enable the first digit

	//initialize Pmod Temperature Sensor
	TMP3_begin(&TemperatureSensor, IIC_ADDR, TMP3_ADDR);
	xil_printf("Initialized temperature sensor\r\n");
	xil_printf("*Address: 0x%x\r\n\n", TemperatureSensor.chipAddr & 0xff);

	//initialize Pmod Pressure Sensor
	DPG1_begin(&PressureSensor, SPI_ADDR);
	xil_printf("Initialized pressure sensor\r\n");
	xil_printf("*Address: 0x%x\r\n\n", SPI_ADDR & 0xff);

	//reading temperature
	xil_printf("Reading data from sensors...\r\n");
	while(1) {
		double temp = TMP3_getTemp(&TemperatureSensor);
		xil_printf("Temperature: %d\r\n", temp); //print in console

		double pressure = DPG1_GetPressure(1, &PressureSensor);
		xil_printf("Pressure: %d\r\n", pressure/10000); //print in console

		u32 tempDigit = tempToSSeg((int) temp); //convert to digit
		XGpio_DiscreteWrite(&gpio, 2, tempDigit); //show on 7 segment display

		for(int i = 0; i < DELAY; i++);
	}

	Xil_ICacheDisable();
	Xil_DCacheDisable();
	return 0;
}

